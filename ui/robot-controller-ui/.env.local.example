# File: /Omega-Code/ui/robot-controller-ui/.env.local.example
# Purpose: Example env for the UI. Safe to commit. Duplicate as `.env.local` and
#          replace placeholders with your real values (no quotes).

# ── Active network profile for all endpoints ───────────────────────────────────
# Options: lan | tailscale | local
NEXT_PUBLIC_NETWORK_PROFILE=tailscale

# ── Example hosts you should replace ───────────────────────────────────────────
# Tailscale MagicDNS hostname (FQDN) for your robot (example only):
#   robot-01.example-tailnet.ts.net
# Typical LAN IP for your robot on home Wi-Fi (example only):
#   192.168.50.23
#
# NOTE: Don’t reference these “example” values below — Next.js doesn’t expand
# env vars. Replace the placeholders directly in the URLs that follow.

# ── MJPEG Video Stream (used by VideoFeed.tsx) ─────────────────────────────────
# Tailscale (MagicDNS) — replace with your real MagicDNS host
NEXT_PUBLIC_VIDEO_STREAM_URL_TAILSCALE=http://robot-01.example-tailnet.ts.net:5000/video_feed
# LAN (replace with your robot’s LAN IP/hostname)
NEXT_PUBLIC_VIDEO_STREAM_URL_LAN=http://192.168.50.23:5000/video_feed
# Local dev
NEXT_PUBLIC_VIDEO_STREAM_URL_LOCAL=http://localhost:5000/video_feed

# ── Movement WS URL (port 8081) ────────────────────────────────────────────────
NEXT_PUBLIC_BACKEND_WS_URL_MOVEMENT_TAILSCALE=ws://robot-01.example-tailnet.ts.net:8081
NEXT_PUBLIC_BACKEND_WS_URL_MOVEMENT_LAN=ws://192.168.50.23:8081
NEXT_PUBLIC_BACKEND_WS_URL_MOVEMENT_LOCAL=ws://localhost:8081

# ── Ultrasonic Sensor WS URL (port 8080, path /ultrasonic) ────────────────────
NEXT_PUBLIC_BACKEND_WS_URL_ULTRASONIC_TAILSCALE=ws://robot-01.example-tailnet.ts.net:8080/ultrasonic
NEXT_PUBLIC_BACKEND_WS_URL_ULTRASONIC_LAN=ws://192.168.50.23:8080/ultrasonic
NEXT_PUBLIC_BACKEND_WS_URL_ULTRASONIC_LOCAL=ws://localhost:8080/ultrasonic

# ── Line Tracking Sensor WS URL (port 8090, path /line-tracker) ───────────────
NEXT_PUBLIC_BACKEND_WS_URL_LINE_TRACKER_TAILSCALE=ws://robot-01.example-tailnet.ts.net:8090/line-tracker
NEXT_PUBLIC_BACKEND_WS_URL_LINE_TRACKER_LAN=ws://192.168.50.23:8090/line-tracker
NEXT_PUBLIC_BACKEND_WS_URL_LINE_TRACKER_LOCAL=ws://localhost:8090/line-tracker

# ── Lighting Control WS URL (port 8082, path /lighting) ───────────────────────
NEXT_PUBLIC_BACKEND_WS_URL_LIGHTING_TAILSCALE=ws://robot-01.example-tailnet.ts.net:8082/lighting
NEXT_PUBLIC_BACKEND_WS_URL_LIGHTING_LAN=ws://192.168.50.23:8082/lighting
NEXT_PUBLIC_BACKEND_WS_URL_LIGHTING_LOCAL=ws://localhost:8082/lighting

# ── Location Tracking WS URL (port 8091, path /location) ──────────────────────
NEXT_PUBLIC_BACKEND_WS_URL_LOCATION_TAILSCALE=ws://robot-01.example-tailnet.ts.net:8091/location
NEXT_PUBLIC_BACKEND_WS_URL_LOCATION_LAN=ws://192.168.50.23:8091/location
NEXT_PUBLIC_BACKEND_WS_URL_LOCATION_LOCAL=ws://localhost:8091/location

# ── Optional: host fallback used by the URL resolver when a direct URL is missing
NEXT_PUBLIC_ROBOT_HOST_TAILSCALE=robot-01.example-tailnet.ts.net

# ── WebSocket behavior & debug ────────────────────────────────────────────────
# Keep WS as ws:// even when the page is https:// (our code respects this flag)
NEXT_PUBLIC_WS_FORCE_INSECURE=0
# Log candidate URLs + connection attempts in the browser console
NEXT_PUBLIC_WS_DEBUG=0
