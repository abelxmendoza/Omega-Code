version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: ./ui/robot-controller-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_WS_URL_MOVEMENT=ws://backend:8080/ws
    depends_on:
      - backend
    networks:
      - robot-network
    restart: unless-stopped

  # Backend Python WebSocket Server
  backend:
    build:
      context: ./servers/robot-controller-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    volumes:
      - ./servers/robot-controller-backend/logs:/app/logs
    networks:
      - robot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.create_connection(('localhost', 8080))"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - robot-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - robot-network
    restart: unless-stopped

volumes:
  redis-data:

networks:
  robot-network:
    driver: bridge
